@startuml
!pragma layout smetana
skinparam Rectangle{
	BorderColor White
	shadowing false
}

package com.bsuir.classdiagram.model{
package CompilationUnit <<Rectangle>>{
class CompilationUnit{
-  customPackage
-  customImports
-  customClasses
-  customEnums

+  updatePackageName (String packageName)
+  addImport (String text)
+  addCustomClass (List<CustomModifier> customModifiers,String type,String className,List<CustomType> customTypes)
+  addCustomEnum (List<CustomModifier> customModifiers,String type,String className,List<String> values)
+  getCustomClass ()
+  getCustomClasses ()
+  getCustomPackage ()
+  getImports ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomClass <<Rectangle>>{
class CustomClass{
- final  customModifiers
- final  type
- final  name
- final  customTypes
-  customFields
-  customMethods

CustomClass (List<CustomModifier> customModifiers,String type,String className,List<CustomType> customTypes)
+  addField (CustomField customField)
+  addMethod (CustomMethod customMethod)
+  getType ()
+  getTypes ()
+  getName ()
+  getModifiers ()
+  getFields ()
+  getMethods ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomEnum <<Rectangle>>{
class CustomEnum{
- final  customModifiers
- final  type
- final  name
- final  values

CustomEnum (List<CustomModifier> customModifiers,String type,String className,List<String> values)
+  getCustomModifiers ()
+  getType ()
+  getName ()
+  getValues ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomField <<Rectangle>>{
class CustomField{
- final  customModifiers
- final  name

- CustomField (List<CustomModifier> customModifiers,String fieldName)
+ static  of (List<CustomModifier> customModifiers,String fieldName)
+  getModifiers ()
+  getName ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomImport <<Rectangle>>{
class CustomImport{
- final  modifier
- final  text

- CustomImport (String text)
+ static  of (String text)
+  getModifier ()
+  getText ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomMethod <<Rectangle>>{
class CustomMethod{
- final  customModifiers
~  isConstructor
- final  name
- final  params
+ static private final public  name
- final  name

- CustomMethod (boolean isConstructor,List<CustomModifier> customModifiers,String methodName,List<Param> params)
+ static  ofParam (String text)
+ static  of (boolean isConstructor,List<CustomModifier> customModifiers,String methodName,List<Param> params)
+ static Param (String text)
Param (String text)
+  getName ()
+  getModifiers ()
+  isConstructor ()
+  getName ()
+  getParams ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomModifier <<Rectangle>>{
class CustomModifier{
- final  modifier

- CustomModifier (TypeModifier text)
+ static  of (TypeModifier text)
+  getModifier ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomPackage <<Rectangle>>{
class CustomPackage{
- final  modifier
- final  text

- CustomPackage (String modifier,String text)
+ static  of (String text)
+  getText ()
+  getModifier ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomStructure <<Rectangle>>{
class CustomStructure{


}
}
}
package com.bsuir.classdiagram.model{
package CustomType <<Rectangle>>{
class CustomType{
- final  text

+ CustomType (String text)
+ static  of (String text)
+  getText ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomVariable <<Rectangle>>{
class CustomVariable{


}
}
}
package com.bsuir.classdiagram.model{
package Params <<Rectangle>>{
class Params{
- static  scanPath
~  exportClassOnly

+ static  init (String scanPath,boolean classOnly)
+ static  getScanPath ()
+ static  isExportClassOnly ()

}
}
}
CustomStructure --> CompilationUnit : extends↑
@startuml
!pragma layout smetana
skinparam Rectangle{
	BorderColor White
	shadowing false
}

package com.bsuir.classdiagram.model{
package CompilationUnit <<Rectangle>>{
class CompilationUnit{
-  customPackage
-  customImports
-  customClasses
-  customEnums

+  updatePackageName (String packageName)
+  addImport (String text)
+  addCustomClass (List<CustomModifier> customModifiers,String type,String className,List<CustomType> customTypes)
+  addCustomEnum (List<CustomModifier> customModifiers,String type,String className,List<String> values)
+  getCustomClass ()
+  getCustomClasses ()
+  getCustomPackage ()
+  getImports ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomClass <<Rectangle>>{
class CustomClass{
- final  customModifiers
- final  type
- final  name
- final  customTypes
-  customFields
-  customMethods

CustomClass (List<CustomModifier> customModifiers,String type,String className,List<CustomType> customTypes)
+  addField (CustomField customField)
+  addMethod (CustomMethod customMethod)
+  getType ()
+  getTypes ()
+  getName ()
+  getModifiers ()
+  getFields ()
+  getMethods ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomEnum <<Rectangle>>{
class CustomEnum{
- final  customModifiers
- final  type
- final  name
- final  values

CustomEnum (List<CustomModifier> customModifiers,String type,String className,List<String> values)
+  getCustomModifiers ()
+  getType ()
+  getName ()
+  getValues ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomField <<Rectangle>>{
class CustomField{
- final  customModifiers
- final  name

- CustomField (List<CustomModifier> customModifiers,String fieldName)
+ static  of (List<CustomModifier> customModifiers,String fieldName)
+  getModifiers ()
+  getName ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomImport <<Rectangle>>{
class CustomImport{
- final  modifier
- final  text

- CustomImport (String text)
+ static  of (String text)
+  getModifier ()
+  getText ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomMethod <<Rectangle>>{
class CustomMethod{
- final  customModifiers
~  isConstructor
- final  name
- final  params
+ static private final public  name
- final  name

- CustomMethod (boolean isConstructor,List<CustomModifier> customModifiers,String methodName,List<Param> params)
+ static  ofParam (String text)
+ static  of (boolean isConstructor,List<CustomModifier> customModifiers,String methodName,List<Param> params)
+ static Param (String text)
Param (String text)
+  getName ()
+  getModifiers ()
+  isConstructor ()
+  getName ()
+  getParams ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomModifier <<Rectangle>>{
class CustomModifier{
- final  modifier

- CustomModifier (TypeModifier text)
+ static  of (TypeModifier text)
+  getModifier ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomPackage <<Rectangle>>{
class CustomPackage{
- final  modifier
- final  text

- CustomPackage (String modifier,String text)
+ static  of (String text)
+  getText ()
+  getModifier ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomStructure <<Rectangle>>{
class CustomStructure{


}
}
}
package com.bsuir.classdiagram.model{
package CustomType <<Rectangle>>{
class CustomType{
- final  text

+ CustomType (String text)
+ static  of (String text)
+  getText ()

}
}
}
package com.bsuir.classdiagram.model{
package CustomVariable <<Rectangle>>{
class CustomVariable{


}
}
}
package com.bsuir.classdiagram.model{
package Params <<Rectangle>>{
class Params{
- static  scanPath
~  exportClassOnly

+ static  init (String scanPath,boolean classOnly)
+ static  getScanPath ()
+ static  isExportClassOnly ()

}
}
}
CustomStructure --> CompilationUnit : extends↑

@enduml